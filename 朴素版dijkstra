import sys
def dijkstra():
    n, m = map(int, sys.stdin.readline().split())
    INF = float('inf')
    g = [[INF] * (n + 1) for _ in range(n + 1)]
    for _ in range(m): #处理边
        x, y, z = map(int, sys.stdin.readline().split())
        if z < g[x][y]:
            g[x][y] = z
    dist = [INF] * (n + 1) #初始化距离数组，dist[i]表示起点1到i的最短距离
    dist[1] = 0
    visited = [False] * (n + 1) #标记节点是否已确定最短路径
    for _ in range(n): #dijkstra
        u = -1 #找到当前未访问且距离最小的节点u
        min_dist = INF
        for i in range(1, n + 1):
            if not visited[i] and dist[i] < min_dist:
                min_dist = dist[i]
                u = i
        if u == -1:
            break
        visited[u] = True #标记u已确定最短路径
        for v in range(1, n + 1): #通过u更新所有邻接节点v的距离
            if g[u][v] != INF and not visited[v]:
                if dist[v] > dist[u] + g[u][v]:
                    dist[v] = dist[u] + g[u][v]
    print(-1 if dist[n] == INF else dist[n])
if __name__ == "__main__":
    dijkstra()
