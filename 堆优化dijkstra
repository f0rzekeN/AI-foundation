import heapq
import sys
def main():
    n, m = map(int, sys.stdin.readline().split())
    g = [[] for _ in range(n + 1)]
    for _ in range(m):
        u, v, w = map(int, sys.stdin.readline().split())
        g[u].append((v, w))
    start = 1
    end = n
    INF = int(10001)
    dis = [INF] * (n + 1)
    dis[start] = 0
    heap = [] #(优先队列，距离，节点）
    heapq.heappush(heap, (0, start))
    visited = (n + 1) * [False] #记录访问过的节点
    while heap:
        dis_u, u = heapq.heappop(heap)
        if visited[u]:
            continue
        if u == end:
            print(dis_u)
            return
        visited[u] = True
        for v, w in g[u]: #如果当前路径到v的距离更小，则更新
            if dis[v] > dis[u] + w:
                dis[v] = dis[u] + w
                heapq.heappush(heap, (dis[v], v))
    print(-1)
if __name__ == "__main__":
    main()
